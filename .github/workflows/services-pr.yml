name: "Pull Request"

on:
  pull_request:
    # Ignore branches having their own workflows
    branches-ignore:
      - 'prod'

jobs:
  PullRequest:
    env:
      CI_BOT_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
      CI_BOT_USERNAME: ${{ secrets.CI_BOT_USERNAME }}
    name: Gradle
    runs-on: ubuntu-latest

    #
    services:
      #
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 30s
          --health-retries 10
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: burrunan/gradle-cache-action@v1
        name: Cache Gradle
        with:
          job-id: jdk17

      - name: Install and cache system packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: ffmpeg gpac postgresql-client
          version: 1.0

      - name: Ensure Postgres started OK
        run: sudo docker start $(docker ps -a -q)

      - name: Setup JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
          java-package: jdk

      - name: Create Postgres databases
        run: |
          createdb -h localhost -p 5432 -U postgres xj_test
        env:
          PGPASSWORD: postgres

      - name: Build & Run Tests
        id: test
        run: "./gradlew --info --no-daemon build test"
        continue-on-error: false

      - name: Nothing left TODO
        run: .github/nothing_left_todo.sh
