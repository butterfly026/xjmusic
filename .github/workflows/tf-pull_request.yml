name: "Terraform Plan from PR"

on:
  pull_request

jobs:
  PlanFromPR:
    name: Plan from PR
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform has been formatted correctly with `terraform fmt`
        id: fmt
        working-directory: ./tf
        run: terraform fmt -check
        continue-on-error: false

      - name: Terraform Init
        id: init
        working-directory: ./tf
        run: terraform init
        continue-on-error: false

      - name: Terraform Validate
        id: validate
        working-directory: ./tf
        run: terraform validate -no-color
        continue-on-error: false

      - name: Terraform Plan
        id: plan
        working-directory: ./tf
        run: terraform plan -no-color
        continue-on-error: false

#      - uses: actions/github-script@0.9.0
#        continue-on-error: true
#        if: github.event_name == 'pull_request'
#        env:
#          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
#            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
#            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
#            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
#
#            <details><summary>Show Plan</summary>
#
#            \`\`\`\n
#            ${process.env.PLAN}
#            \`\`\`
#
#            </details>
#
#            *Pusher: ${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
#
#            github.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: output
#            })
