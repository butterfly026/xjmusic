version: '2.4'

services:

  hub:
    build:
      context: .
    tty: true
    stdin_open: true
    network_mode: host
    volumes:
      - .:/var/app/current
      - ./log:/var/log
      - ./hub/build/distributions/hub-1.0.tar:/var/app/hub-1.0.tar
    environment:
      APP_NAME: hub
      APP_VERSION: 1.0
      DD_AGENT_HOST: localhost
      DD_TRACE_AGENT_PORT: 8126
      DD_SERVICE: hub
      DD_ENV: ${ENVIRONMENT}
    container_name: hub01xj1
    depends_on:
      - ddagent
      - postgres
      - redis
    restart: always

  nexus:
    build:
      context: .
    network_mode: host
    tty: true
    stdin_open: true
    volumes:
      - .:/var/app/current
      - ./log:/var/log
      - ./nexus/build/distributions/nexus-1.0.tar:/var/app/nexus-1.0.tar
    environment:
      APP_NAME: nexus
      APP_VERSION: 1.0
      DD_AGENT_HOST: localhost
      DD_TRACE_AGENT_PORT: 8126
      DD_SERVICE: nexus
      DD_ENV: ${ENVIRONMENT}
    container_name: nexus01xj1
    depends_on:
      - ddagent
      - postgres
      - redis
    restart: always

  postgres:
    container_name: postgres01xj1
    network_mode: host
    image: postgres:11.6
    depends_on:
      - ddagent
    volumes:
      - /var/lib/postgresql/data
      - ./log/postgres:/var/log/postgres
      - ./ops/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DD_ENV: ${ENVIRONMENT}
    restart: always

  redis:
    container_name: redis01xj1
    network_mode: host
    image: redis:3.0.7
    depends_on:
      - ddagent
    environment:
      DD_ENV: ${ENVIRONMENT}
    restart: always

  ddagent:
    container_name: ddagent01xj1
    image: gcr.io/datadoghq/agent:7
    environment:
      DD_API_KEY: ${DD_API_KEY}
      DD_SITE: datadoghq.com
      DD_DOGSTATSD_NON_LOCAL_TRAFFIC: "true"
      DD_ENV: ${ENVIRONMENT}
      DD_HOSTNAME: ${HOSTNAME}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    restart: always
