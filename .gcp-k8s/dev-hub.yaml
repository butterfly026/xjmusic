apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: hub
  name: hub
  namespace: dev
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: hub
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: hub
    spec:
      automountServiceAccountToken: true
      containers:
        - image: gcr.io/xj-vpc-host-prod/hub:latest
          imagePullPolicy: Always
          envFrom:
            - secretRef:
                name: dev.env
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: hub
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
  labels:
    k8s-app: hub
  name: hub
  namespace: dev
spec:
  allocateLoadBalancerNodePorts: true
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - nodePort: 30415
      port: 8080
      protocol: TCP
      targetPort: 3000
  selector:
    k8s-app: hub
  sessionAffinity: None
  type: LoadBalancer
