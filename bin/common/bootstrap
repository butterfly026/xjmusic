#!/usr/bin/env bash

#   This is the ONLY app bootstrap script. It is shared by both
#   the Docker config and bin/release-elasticbeanstalk vectors
#   which are responsible for its respective implementation.
#
TITLE="App Bootstrap"
USAGE="
   Usage:
     bin/common/bootstrap <app> <arguments...>

   <app> to run, as in: java io.outright.xj.<app>
   <arguments...> (optional) passed to 'java'
"

#
require () {
  VALUE="${1}"
  NAME="${2}"
  if [ "${VALUE}" == "" ]; then
    printf "\nERROR! <${NAME}> is required.\n${USAGE}\n"
    exit 1
  fi
}

#
APP=${1}
require "${APP}" "app"

# Load environment variables; defaults are in /default.env
if [ -a ${PWD}/.env ]; then
  . ${PWD}/.env
else
  printf "\n\nCan't find ${PWD}/.env!\nPlease create one; it's not included with the distribution!\n\n"
  exit 1
fi

#
JAR=/var/app/current/${APP}/target/${APP}-1.0-SNAPSHOT.jar
if [ ! -e ${JAR} ]; then
  printf "\n\nCan't find ${JAR}!\nPlease package the build artifacts.\n\n"
  exit 1
fi

#
LOG_DIR=/var/log/${APP}
STDOUT_LOG=${LOG_DIR}/${APP}.out.log
STDERR_LOG=${LOG_DIR}/${APP}.err.log
ACCESS_LOG=${LOG_DIR}/access.log
mkdir -p ${LOG_DIR}

# Environment (System) Properties
#
# The default environment variables are in the file **/default.env**
# which is copied to a new file **/.env** on project setup. Developers
# modify their local .env file with private keys and configuration.
#
# The **default.env** file is kept up-to-date with all
# environment variables expected by this script.
#
PROPS="-Dlog.access.filename=${ACCESS_LOG}"
PROPS="${PROPS} -Dauth.google.id=${AUTH_GOOGLE_ID}"
PROPS="${PROPS} -Dauth.google.secret=${AUTH_GOOGLE_SECRET}"
PROPS="${PROPS} -Ddb.mysql.host=${DB_MYSQL_HOST}"
PROPS="${PROPS} -Ddb.mysql.port=${DB_MYSQL_PORT}"
PROPS="${PROPS} -Ddb.mysql.user=${DB_MYSQL_USER}"
PROPS="${PROPS} -Ddb.mysql.pass=${DB_MYSQL_PASS}"

#
printf "Starting java: ${JAR}\n"
printf "   stdout log: ${STDOUT_LOG}\n"
printf "   stderr log: ${STDERR_LOG}\n"
printf "   access log: ${ACCESS_LOG}\n"
java ${PROPS} -jar ${JAR} 1> ${STDOUT_LOG} 2> ${STDERR_LOG}
