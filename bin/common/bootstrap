#!/usr/bin/env bash

#   This is the ONLY app bootstrap script. It is shared by both
#   the Docker config and bin/release-elasticbeanstalk vectors
#   which are responsible for its respective implementation.
#
TITLE="App Bootstrap"
USAGE="
   Usage:
     bin/common/bootstrap <app> <arguments...>

   <app> to run, as in: java io.xj.<app>
   <arguments...> (optional) passed to 'java'
"

#
require () {
  VALUE="${1}"
  NAME="${2}"
  if [ "${VALUE}" == "" ]; then
    printf "\nERROR! <${NAME}> is required.\n${USAGE}\n"
    exit 1
  fi
}

#
APP=${1}
require "${APP}" "app"

#
JAR=/var/app/current/${APP}/target/${APP}-1.0-SNAPSHOT.jar
if [ ! -e ${JAR} ]; then
  printf "\n\nCan't find ${JAR}!\nPlease package the build artifacts.\n\n"
  exit 1
fi

#
LOG_DIR=/var/log/${APP}
mkdir -p ${LOG_DIR}

#
STDOUT_LOG=${LOG_DIR}/${APP}.out.log
STDERR_LOG=${LOG_DIR}/${APP}.err.log

#
ACCESS_LOG=${LOG_DIR}/${APP}.access.log
touch ${ACCESS_LOG}
chmod +w ${ACCESS_LOG}

#
printf "[$(date)]\n"
printf "Environment:\n"
printenv
printf "Starting java: ${JAR}\n"
printf "   stdout log: ${STDOUT_LOG}\n"
printf "   stderr log: ${STDERR_LOG}\n"
printf "   access log: ${ACCESS_LOG}\n"
java \
  -Daccess.token.max.age=${ACCESS_TOKEN_EXPIRE_SECONDS} \
  -Dapp.hostname=${HOSTNAME} \
  -Dapp.name=${APP} \
  -Dapp.url.api=${APP_URL_API} \
  -Dapp.url.base=${APP_URL_BASE} \
  -Daudio.file.bucket=${AUDIO_FILE_BUCKET} \
  -Daudio.url.base=${AUDIO_URL_BASE} \
  -Daudio.url.upload=${AUDIO_URL_UPLOAD} \
  -Dauth.google.id=${GOOGLE_ID} \
  -Dauth.google.secret=${GOOGLE_SECRET} \
  -Daws.accessKeyId=${AWS_ID} \
  -Daws.secretKey=${AWS_SECRET} \
  -Dcache.file.allocate.bytes=${CACHE_FILE_ALLOCATE_BYTES} \
  -Dcache.file.path.prefix=/var/cache/${APP}/ \
  -Ddb.postgresql.database=${SQL_DATABASE} \
  -Ddb.postgresql.host=${SQL_HOST} \
  -Ddb.postgresql.pass=${SQL_PASS} \
  -Ddb.postgresql.port=${SQL_PORT} \
  -Ddb.postgresql.user=${SQL_USER} \
  -Ddb.redis.host=${REDIS_HOST} \
  -Ddb.redis.port=${REDIS_PORT} \
  -Dlog.access.entities.all=true \
  -Dlog.access.filename=/var/log/${APP}/${APP}.access.log \
  -Dplatform.heartbeat.key=${PLATFORM_HEARTBEAT_KEY} \
  -Dsegment.file.bucket=${SEGMENT_FILE_BUCKET} \
  -Dsegment.file.upload.${SEGMENT_FILE_UPLOAD} \
  -Dsegment.file.upload.${SEGMENT_FILE_UPLOAD} \
  -Dsegment.url.base=${SEGMENT_URL_BASE} \
  -Dsegment.url.upload=${SEGMENT_URL_UPLOAD} \
  -Dwork.batch.size=${WORK_BATCH_SIZE} \
  -Dwork.chain.delay.seconds=${WORK_CHAIN_DELAY_SECONDS} \
  -Dwork.chain.recur.seconds=${WORK_CHAIN_RECUR_SECONDS} \
  -Dwork.concurrency=${WORK_CONCURRENCY} \
  -jar ${JAR} 1> ${STDOUT_LOG} 2> ${STDERR_LOG}
