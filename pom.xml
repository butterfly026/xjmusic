<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2020, XJ Music Inc. (https://xj.io) All Rights Reserved. -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- io.xj [parent] -->
  <parent>
    <groupId>io</groupId>
    <artifactId>xj</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <!-- io.xj.core -->
  <groupId>io.xj</groupId>
  <artifactId>platform</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <!-- props -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.version>2.5.1</maven.compiler.version>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <jersey.version>2.29.1</jersey.version>
    <guice.version>4.0</guice.version>
    <guava.version>27.1-jre</guava.version>
    <db.database>xj_dev</db.database>
    <db.username>root</db.username>
    <db.driver>org.postgresql.Driver</db.driver>
    <db.url>jdbc:postgresql://127.0.0.1:5400/${db.database}</db.url>
    <org.jooq.version>3.12.3</org.jooq.version>
  </properties>

  <!-- deps -->
  <dependencies>

    <!-- https://mvnrepository.com/artifact/com.github.axet/TarsosDSP -->
    <dependency>
      <groupId>com.github.axet</groupId>
      <artifactId>TarsosDSP</artifactId>
      <version>2.4-1</version>
    </dependency>

    <!-- AAC encoding with FDK AAC via JNA -->
    <dependency>
      <groupId>org.sheinbergon</groupId>
      <artifactId>jna-aac-encoder</artifactId>
      <version>0.1.4</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.amazonaws/aws-lambda-java-core -->
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-lambda-java-core</artifactId>
      <version>1.2.0</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.8</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.typesafe/config -->
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>1.4.0</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.reflections/reflections -->
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>0.9.11</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>2.10.1</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/javax.cache/cache-api -->
    <dependency>
      <groupId>javax.cache</groupId>
      <artifactId>cache-api</artifactId>
      <version>1.1.1</version>
    </dependency>

    <!-- javax activation -->
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <version>1.1</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.8.0</version>
      <scope>test</scope>
    </dependency>

    <!-- Jesque job queue https://mvnrepository.com/artifact/net.greghaines/jesque -->
    <dependency>
      <groupId>net.greghaines</groupId>
      <artifactId>jesque</artifactId>
      <version>2.1.3</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>

    <!-- Fuzzy Wuzzy text matching based on Levenshtein distance -->
    <dependency>
      <groupId>me.xdrop</groupId>
      <artifactId>fuzzywuzzy</artifactId>
      <version>1.1.9</version>
    </dependency>

    <!-- [#233] Snowball word stemmer for meme ingest: https://mvnrepository.com/artifact/com.github.rholder/snowball-stemmer -->
    <dependency>
      <groupId>com.github.rholder</groupId>
      <artifactId>snowball-stemmer</artifactId>
      <version>1.3.0.581.1</version>
    </dependency>

    <!-- Apache commons code for sounds-like event/note/name comparison: https://mvnrepository.com/artifact/commons-codec/commons-codec -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.10</version>
    </dependency>

    <!-- YAML for readable messages: https://mvnrepository.com/artifact/org.yaml/snakeyaml -->
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>1.18</version>
    </dependency>

    <!-- Jersey -->
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-grizzly2-http</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.test-framework.providers</groupId>
      <artifactId>jersey-test-framework-provider-simple</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <!-- Near-optimal caching -->
    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
      <version>2.6.0</version>
    </dependency>

    <!-- HTTP server REST webservice: https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api -->
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <version>2.0.1</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.2.8</version>
    </dependency>

    <!-- database access structures: https://mvnrepository.com/artifact/org.jooq/jooq -->
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>${org.jooq.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.jooq/jooq-codegen -->
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-codegen</artifactId>
      <version>${org.jooq.version}</version>
    </dependency>

    <!-- database access: https://github.com/xetorthio/jedis - https://mvnrepository.com/artifact/redis.clients/jedis -->
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>2.9.0</version>
    </dependency>

    <!-- external authentication: https://mvnrepository.com/artifact/com.google.api-client/google-api-client -->
    <dependency>
      <groupId>com.google.api-client</groupId>
      <artifactId>google-api-client</artifactId>
      <version>1.22.0</version>
    </dependency>

    <!-- external authentication: https://mvnrepository.com/artifact/com.google.apis/google-api-services-plus -->
    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-plus</artifactId>
      <version>v1-rev477-1.22.0</version>
    </dependency>

    <!-- external web services: https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk -->
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk</artifactId>
      <version>1.11.119</version>
    </dependency>

    <!-- database migration: https://flywaydb.org/documentation/api/ -->
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>4.0.3</version>
    </dependency>

    <!-- JSON: https://mvnrepository.com/artifact/org.json/json -->
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20160810</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.2</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.google.inject/guice -->
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>${guice.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.google.inject.extensions/guice-assistedinject -->
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-assistedinject</artifactId>
      <version>${guice.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest-library - must be added before junit -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>

    <!-- test: junit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
    </dependency>

    <!-- test: mockito - https://mvnrepository.com/artifact/org.mockito/mockito-all -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.10.19</version>
    </dependency>

    <!-- logging: https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.5</version>
    </dependency>

    <!-- with logback implementation -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.13</version>
    </dependency>

  </dependencies>

  <!-- build -->

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
        <configuration>
          <forkCount>3</forkCount>
          <reuseForks>true</reuseForks>
          <argLine>-Xmx1024m -XX:MaxPermSize=256m</argLine>
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
      </plugin>

      <plugin>
        <!-- Note that we are running migrations during the build process
             solely to ensure that jOOQ generates the latest tables -->
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>
        <version>4.0.3</version>

        <!-- Note that we're executing the Flyway
             plugin in the "generate-sources" phase -->
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>migrate</goal>
            </goals>
          </execution>
        </executions>

        <!-- Note that we need to prefix the db/migration
             path with filesystem: to prevent Flyway
             of looking for our migration scripts
             only on the classpath -->
        <configuration>
          <driver>${db.driver}</driver>
          <url>${db.url}</url>
          <user>${db.username}</user>
          <locations>
            <location>filesystem:src/main/resources/db/migration</location>
          </locations>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${org.jooq.version}</version>

        <!-- The jOOQ code generation plugin is also
             executed in the generate-sources phase,
             prior to compilation -->
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>

        <!-- This is a minimal working configuration.
             See the manual's section about the code
             generator for more details -->
        <configuration>
          <jdbc>
            <driver>${db.driver}</driver>
            <url>${db.url}</url>
            <user>${db.username}</user>
          </jdbc>

          <generator>
            <!--<name>org.jooq.meta.postgres.PostgresDatabase</name>-->
            <database>
              <includes>.*</includes>
              <inputSchema>xj</inputSchema>
            </database>
            <target>
              <packageName>io.xj.core</packageName>
              <directory>target/generated-sources/db</directory>
            </target>
          </generator>
        </configuration>
      </plugin>

      <!-- Integration tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.19</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <phase>integration-test</phase>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <phase>verify</phase>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <inherited>true</inherited>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>
