#!/usr/bin/env bash

#
postgres_ok () {
  HOST="${1}"
  PORT="${2}"
  if pg_isready \
    -h "${HOST}" \
    -p "${PORT}"
    &> /dev/null; then
    return 0
  else
    return 1
  fi
}
#
redis_ok () {
  HOST="${1}"
  PORT="${2}"
  if timeout 1 redis-cli \
    -h "${HOST}" \
    -p "${PORT}" \
    lpush test 1
    &> /dev/null; then
    return 0
  else
    return 1
  fi
}
#
wait_until () {
  CMD="${1}"
  while ! eval "${CMD}"; do
    printf "Waiting for ${CMD}...\n"
    sleep 1
  done
  printf "${CMD}.\n"
}

#
printf "\n[xj:docker]\n"

#
wait_until "postgres_ok postgres01xj1 5400"
wait_until "redis_ok redis01xj1 6379"

# serve static frontend with nginx
FRONTEND_PATH=/var/app/current/ui/hub-mk1-ui/dist/
if [ ! -e "${FRONTEND_PATH}/index.html" ]; then
  printf "Cannot find ${FRONTEND_PATH}/index.html"
  exit 1
fi
chmod -R +r "${FRONTEND_PATH}"
mkdir -p /var/log/nginx
service nginx start

# spawn processes
for APP in ${APPS}; do
  bin/bootstrap ${APP} &
done

# interactive tty
printf "\nLogging in...\n"
/bin/bash
