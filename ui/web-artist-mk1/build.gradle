/*
 * Copyright (c) XJ Music Inc. (https://xj.io) All Rights Reserved.
 */

buildscript {
  repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  dependencies {
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"
  }
}

apply plugin: "org.sonarqube"

group = 'io.xj'
version = '1.0'
description = 'xj-ui-web-artist-mk1'
tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

sonarqube {
  properties {
    property "sonar.sourceEncoding", "UTF-8"
    property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
  }
}

task installJavascriptPackages(type: Exec) {
  inputs.file("package.json")
  outputs.file("package-lock.json")
  outputs.dir("node_modules")
  println "Will install Javascript packages"
  commandLine "npm", "install"
}

task buildJavascript(type: Exec) {
  inputs.file("ember-cli-build.js")
  inputs.file("metadata.js")
  inputs.dir("app")
  inputs.dir("config")
  inputs.dir("public")
  inputs.dir("tests")
  inputs.dir("vendor")
  outputs.dir("build")
  println "Will build Javascript"
  commandLine "npm", "run-script", "build"
}

buildJavascript.dependsOn(installJavascriptPackages)
if (build) build.finalizedBy(buildJavascript)
