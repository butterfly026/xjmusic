// Copyright (c) XJ Music Inc. (https://xj.io) All Rights Reserved.
//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility

plugins {
  id 'application'
  id 'distribution'
  id 'jacoco'
  id 'java'
  id 'java-test-fixtures'
  //
  id "de.undercouch.download"
  id "org.flywaydb.flyway"
  id "org.openapi.generator"
  id 'com.google.cloud.tools.jib'
  id 'nu.studer.jooq'
  id 'org.ajoberstar.grgit'
}

group = 'io.xj'
version = '1.0'

description = 'XJ Music platform backend services'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

jacocoTestReport {
  reports {
    xml.enabled true
  }
}

apply plugin: "nu.studer.jooq"
apply plugin: "org.flywaydb.flyway"
apply plugin: 'java'

flyway {
  url = 'jdbc:postgresql://127.0.0.1:5432/xj_test'
  user = 'postgres'
  password = 'postgres'
  schemas = ['xj']
}

dependencies {
  implementation project(":lib")
  testFixturesImplementation(project(":lib"))
  //
  // jOOq vendor
  jooqRuntime 'org.postgresql:postgresql:42.2.23.jre7'
  // vendor
  compileOnly 'io.swagger:swagger-annotations:1.5.10'
  implementation 'ch.qos.logback:logback-classic:1.1.3'
  implementation 'ch.qos.logback:logback-classic:1.2.3'
  implementation 'ch.qos.logback:logback-core:1.2.3'
  implementation 'com.amazonaws:aws-java-sdk-secretsmanager:1.12.7'
  implementation 'com.amazonaws:aws-java-sdk:1.11.119'
  implementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.1'
  implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.10.2.1'
  implementation 'com.fasterxml.jackson.module:jackson-module-guice:2.10.3'
  implementation 'com.github.axet:TarsosDSP:2.4-1'
  implementation 'com.github.ben-manes.caffeine:caffeine:2.6.0'
  implementation 'com.github.rholder:snowball-stemmer:1.3.0.581.1'
  implementation 'com.google.api-client:google-api-client:1.30.9'
  implementation 'com.google.apis:google-api-services-plus:v1-rev590-1.25.0'
  implementation 'com.google.guava:guava:28.2-jre'
  implementation 'com.google.inject.extensions:guice-assistedinject:5.0.1'
  implementation 'com.google.inject:guice:5.0.1'
  implementation 'com.typesafe:config:1.4.0'
  implementation 'com.zaxxer:HikariCP:3.4.1'
  implementation 'commons-codec:commons-codec:1.10'
  implementation 'commons-io:commons-io:2.6'
  implementation 'io.confluent:rest-utils:5.4.0'
  implementation 'io.swagger.core.v3:swagger-annotations:2.1.9'
  implementation 'io.swagger.core.v3:swagger-jaxrs2:2.1.9'
  implementation 'javax.activation:activation:1.1'
  implementation 'javax.activation:activation:1.1.1'
  implementation 'javax.annotation:javax.annotation-api:1.3.2'
  implementation 'javax.cache:cache-api:1.1.1'
  implementation 'javax.servlet:javax.servlet-api:4.0.1'
  implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
  implementation 'me.xdrop:fuzzywuzzy:1.1.9'
  implementation 'net.logstash.logback:logstash-logback-encoder:6.6'
  implementation 'org.apache.httpcomponents:httpclient:4.5.12'
  implementation 'org.apache.httpcomponents:httpclient:4.5.8'
  implementation 'org.apache.httpcomponents:httpcore:4.4.13'
  implementation 'org.eclipse.jetty:jetty-server:9.4.26.v20200117'
  implementation 'org.eclipse.jetty:jetty-servlet:9.4.26.v20200117'
  implementation 'org.flywaydb:flyway-core:6.2.4'
  implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'
  implementation 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.33'
  implementation 'org.glassfish.jersey.containers:jersey-container-servlet:2.33'
  implementation 'org.glassfish.jersey.core:jersey-server:2.33'
  implementation 'org.glassfish.jersey.inject:jersey-hk2:2.33'
  implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:2.33'
  implementation 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-simple:2.33'
  implementation 'org.jooq:jooq-codegen:3.12.3'
  implementation 'org.jooq:jooq:3.12.3'
  implementation 'org.json:json:20160810'
  implementation 'org.mockito:mockito-core:1.10.19'
  implementation 'org.postgresql:postgresql:42.2.23.jre7'
  implementation 'org.reflections:reflections:0.9.11'
  implementation 'org.slf4j:slf4j-api:1.7.30'
  implementation 'org.yaml:snakeyaml:1.18'
  implementation 'redis.clients:jedis:2.9.0'
  implementation 'software.amazon.awssdk:cloudwatch:2.17.20'
  testFixturesImplementation 'com.google.guava:guava:28.2-jre'
  testFixturesImplementation 'com.google.inject.extensions:guice-assistedinject:5.0.1'
  testFixturesImplementation 'com.google.inject:guice:5.0.1'
  testFixturesImplementation 'com.typesafe:config:1.4.0'
  testFixturesImplementation 'org.jooq:jooq:3.12.3'
  testFixturesImplementation 'org.slf4j:slf4j-api:1.7.30'
  testFixturesImplementation 'redis.clients:jedis:2.9.0'
  testImplementation 'com.github.tomakehurst:wiremock-jre8:2.26.3'
  testImplementation 'junit:junit:4.11'
  testImplementation 'junit:junit:4.12'
  testImplementation 'org.assertj:assertj-core:3.8.0'
  testImplementation 'org.eclipse.jetty:jetty-client:9.4.26.v20200117'
  testImplementation 'org.hamcrest:hamcrest-library:1.3'
  testImplementation 'org.mockito:mockito-core:3.2.4'
}

jooq {
  version = '3.12.3'
  edition = 'OSS'
  generateSchemaSourceOnCompilation = true
  sample(sourceSets.main) {
    jdbc {
      driver = 'org.postgresql.Driver'
      url = 'jdbc:postgresql://localhost:5432/xj_test'
      user = 'postgres'
      password = 'postgres'
    }
    generator {
      name = 'org.jooq.codegen.DefaultGenerator'
      strategy {
        name = 'org.jooq.codegen.DefaultGeneratorStrategy'
        // ...
      }
      database {
        name = 'org.jooq.meta.postgres.PostgresDatabase'
        inputSchema = 'xj'
        includes = '.*'
        // ...
      }
      generate {
        relations = true
        deprecated = false
        records = true
        pojos = true
        interfaces = true
        daos = true
        immutablePojos = false
        fluentSetters = false
        // ...
      }
      target {
        packageName = 'io.xj.hub'
        directory = 'build/generated/sources/db'
        // directory = ...
      }
    }
  }
}

generateSampleJooqSchemaSource.dependsOn(flywayMigrate)

jar {
  manifest {
    attributes 'Main-Class': 'io.xj.hub.Main'
  }
}

application {
  mainClassName = 'io.xj.hub.Main'
}

applicationDefaultJvmArgs = [
  "-Xmx2g"
]

group = 'io.xj'
version = '1.0'
description = 'XJ Music Content Hub'
sourceCompatibility = '16'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
  dependsOn generateSampleJooqSchemaSource
}

jacocoTestReport {
  reports {
    xml.enabled true
  }
}

static def gitBranch() {
  def branch = ""
  def proc = "git rev-parse --abbrev-ref HEAD".execute()
  proc.in.eachLine { line -> branch = line }
  proc.err.eachLine { line -> println line }
  proc.waitFor()
  branch
}

allprojects {
  apply plugin: 'java'

  java {
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
  }
}

jib {
  to.image = gitBranch() == 'main' ? '027141088039.dkr.ecr.us-east-1.amazonaws.com/xj/hub' : '027141088039.dkr.ecr.us-east-1.amazonaws.com/xj/dev/hub'
  from.image = '027141088039.dkr.ecr.us-east-1.amazonaws.com/xj/base:latest'
  container.jvmFlags = ["-Djava.library.path=/usr/lib/x86_64-linux-gnu"]
}
