// Copyright (c) XJ Music Inc. (https://xj.io) All Rights Reserved.

plugins {
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
  id 'application'
  id 'com.google.cloud.tools.jib'
  id 'de.undercouch.download'
  id 'distribution'
  id 'jacoco'
  id 'java-test-fixtures'
  id 'org.ajoberstar.grgit'
  id 'org.flywaydb.flyway'
  id 'org.sonarqube'
}

group = 'io.xj'
version = '1.0'
sourceCompatibility = '16'
description = 'XJ Music platform backend services'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

jacocoTestReport {
  reports {
    xml.enabled true
  }
}

apply plugin: 'java'

repositories {
  mavenLocal()
  maven {
    url = 'https://repo.maven.apache.org/maven2'
  }
  maven {
    url = 'https://packages.confluent.io/maven/'
  }
}

dependencies {
  implementation project(":hub")
  implementation project(":lib")
  testFixturesImplementation(project(":hub"))
  testFixturesImplementation(project(":lib"))
  testFixturesImplementation(testFixtures(project(":hub")))
  testImplementation(project(':lib').sourceSets.test.output)
  testImplementation(testFixtures(project(":hub")))
  //
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
  implementation 'ch.qos.logback:logback-classic:1.2.6'
  implementation 'com.amazonaws:aws-java-sdk-secretsmanager:1.12.90'
  implementation 'com.amazonaws:aws-java-sdk:1.12.90'
  implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.0'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'
  implementation 'com.github.axet:TarsosDSP:2.4-1'
  implementation 'com.github.rholder:snowball-stemmer:1.3.0.581.1'
  implementation 'com.google.api-client:google-api-client:1.32.2'
  implementation 'com.google.apis:google-api-services-plus:v1-rev20190328-1.30.10'
  implementation 'com.google.guava:guava:31.0.1-jre'
  implementation 'com.typesafe:config:1.4.1'
  implementation 'com.zaxxer:HikariCP:5.0.0'
  implementation 'commons-codec:commons-codec:1.5'
  implementation 'commons-io:commons-io:2.11.0'
  implementation 'javax.activation:activation:1.1.1'
  implementation 'javax.annotation:javax.annotation-api:1.3.2'
  implementation 'javax.cache:cache-api:1.1.1'
  implementation 'javax.validation:validation-api:2.0.1.Final'
  implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
  implementation 'me.xdrop:fuzzywuzzy:1.3.1'
  implementation 'net.logstash.logback:logstash-logback-encoder:6.6'
  implementation 'org.apache.httpcomponents:httpclient:4.5.13'
  implementation 'org.jooq:jooq:3.15.2'
  implementation 'org.json:json:20210307'
  implementation 'org.reflections:reflections:0.10.1'
  implementation 'org.slf4j:log4j-over-slf4j:1.7.32'
  implementation 'org.slf4j:slf4j-api:1.7.32'
  implementation 'org.yaml:snakeyaml:1.29'
  implementation 'software.amazon.awssdk:cloudwatch:2.17.61'
  testFixturesImplementation 'com.google.guava:guava:31.0.1-jre'
  testFixturesImplementation 'com.typesafe:config:1.4.1'
  testFixturesImplementation 'org.jooq:jooq:3.15.2'
  testFixturesImplementation 'org.slf4j:slf4j-api:1.7.32'
  testFixturesImplementation 'redis.clients:jedis:3.6.3'
  testImplementation 'com.github.tomakehurst:wiremock-jre8:2.31.0'
  testImplementation 'junit:junit:4.13.2'
  testImplementation 'org.assertj:assertj-core:3.21.0'
  testImplementation 'org.hamcrest:hamcrest-library:2.2'
  testImplementation 'org.mockito:mockito-core:4.0.0'
}

jar {
  manifest {
    attributes 'Main-Class': 'io.xj.nexus.NexusApplication'
  }
}

application {
  mainClassName = 'io.xj.nexus.NexusApplication'
}

java {
  sourceCompatibility = JavaVersion.VERSION_16
  targetCompatibility = JavaVersion.VERSION_16
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

jacocoTestReport {
  reports {
    xml.enabled true
  }
}

// Ship to multiple repositories https://www.pivotaltracker.com/story/show/180684409
jib {
  container.jvmFlags = ["-Djava.library.path=/usr/lib/x86_64-linux-gnu", "-Xmx3500m"]
  // set from CI command: (for building and pushing the image to multiple repositories)
  from.image = project.jibFromImage
  to.image = project.jibToImageRegistry + '/' + name
}

