openapi: 3.0.3
info:
  version: 1.0.0
  title: XJ Music Chains API
servers:
  - url: http://hub.lab.svc.cluster.local:3000/api/v2
    description: XJ Music API (Service Cluster Local)
tags:
  - name: chains
paths:
  #
  #
  "/healthz":
    get:
      operationId: 'healthz'
      responses:
        "200":
          description: OK
#
#
# Components
#
components:
  schemas:

    #
    Chain:
      type: object
      properties:
        id:
          type: string
          format: uuid
        accountId:
          type: string
          format: uuid
        templateId:
          type: string
          format: uuid
        type:
          $ref: "#/components/schemas/ChainType"
        state:
          $ref: "#/components/schemas/ChainState"
        shipKey:
          type: string
          nullable: true
        templateConfig:
          type: string
        name:
          type: string
        startAt:
          type: string
        stopAt:
          type: string
        fabricatedAheadAt:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string

    #
    ChainType:
      type: string
      enum:
        [
            Preview,
            Production,
        ]

    #
    ChainState:
      type: string
      enum:
        [
            Draft,
            Ready,
            Fabricate,
            Complete,
            Failed,
        ]

    #
    Segment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        chainId:
          type: string
          format: uuid
        type:
          $ref: "#/components/schemas/SegmentType"
        state:
          $ref: "#/components/schemas/SegmentState"
        beginAt:
          type: string
        endAt:
          type: string
        key:
          type: string
        total:
          type: integer
        offset:
          type: integer
          format: int64
        density:
          type: number
          format: double
        tempo:
          type: number
          format: double
        storageKey:
          type: string
        waveformPreroll:
          type: number
          format: double
        waveformPostroll:
          type: number
          format: double
        outputEncoder:
          type: string
        delta:
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string

    #
    SegmentType:
      type: string
      enum:
        [
            Pending, # Segments are created with this type before a real one is assigned.
            Initial, # Only the first Segment in a Chain: Choose first Macro and Main program.
            Continue, # Continue the Main Program (and implicitly, continue the Macro program too)
            NextMain, # Choose the next Main program (but continue the Macro program)
            NextMacro, # Choose the next Macro program (and implicitly, the next Main program too)
        ]

    #
    SegmentState:
      type: string
      enum:
        [
            Planned,
            Crafting,
            Crafted,
            Dubbing,
            Dubbed,
            Failed,
        ]

    #
    SegmentMessage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        segmentId:
          type: string
          format: uuid
        type:
          $ref: "#/components/schemas/SegmentMessageType"
        body:
          type: string

    #
    SegmentMessageType:
      type: string
      enum:
        [
            Debug,
            Info,
            Warning,
            Error,
        ]

    #
    SegmentMeme:
      type: object
      properties:
        id:
          type: string
          format: uuid
        segmentId:
          type: string
          format: uuid
        name:
          type: string

    #
    SegmentChord:
      type: object
      properties:
        id:
          type: string
          format: uuid
        segmentId:
          type: string
          format: uuid
        position:
          type: number
          format: double
        name:
          type: string

    #
    SegmentChordVoicing:
      type: object
      properties:
        id:
          type: string
          format: uuid
        segmentId:
          type: string
          format: uuid
        segmentChordId:
          type: string
          format: uuid
        type:
          type: string
        notes:
          type: string

    #
    SegmentChoice:
      type: object
      properties:
        id:
          type: string
          format: uuid
        segmentId:
          type: string
          format: uuid
        programId:
          type: string
          format: uuid
        programSequenceId:
          type: string
          format: uuid
        programSequenceBindingId:
          type: string
          format: uuid
        programVoiceId:
          type: string
          format: uuid
        instrumentId:
          type: string
          format: uuid
        deltaIn:
          type: integer
        deltaOut:
          type: integer
        instrumentType:
          type: string
        instrumentMode:
          type: string
        programType:
          type: string

    #
    SegmentChoiceArrangement:
      type: object
      properties:
        id:
          type: string
          format: uuid
        segmentId:
          type: string
          format: uuid
        segmentChoiceId:
          type: string
          format: uuid
        programSequencePatternId:
          type: string
          format: uuid

    #
    SegmentChoiceArrangementPick:
      type: object
      properties:
        id:
          type: string
          format: uuid
        segmentId:
          type: string
          format: uuid
        segmentChoiceArrangementId:
          type: string
          format: uuid
        segmentChordVoicingId:
          type: string
          format: uuid
        instrumentAudioId:
          type: string
          format: uuid
        programSequencePatternEventId:
          type: string
          format: uuid
        start:
          type: number
          format: double
        length:
          type: number
          format: double
          nullable: true
        amplitude:
          type: number
          format: double
        tones:
          type: string
        event:
          type: string

    #
    Error:
      type: object
      properties:
        title:
          type: string
          description: A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem. Like title, this fieldâ€™s value can be localized.

